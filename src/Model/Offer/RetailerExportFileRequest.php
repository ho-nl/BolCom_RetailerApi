<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Offer;

final class RetailerExportFileRequest
{
    private $id;
    private $entityId;
    private $eventType;
    private $description;
    private $status;
    private $errorMessage;
    private $createTimestamp;
    private $links;

    /**
     * @param int $id
     * @param string $entityId
     * @param string $eventType
     * @param string $description
     * @param string $status
     * @param string $errorMessage
     * @param string $createTimestamp
     */
    public function __construct(
        int $id,
        string $entityId,
        string $eventType,
        string $description,
        string $status,
        string $errorMessage,
        string $createTimestamp
    ) {
        $this->id = $id;
        $this->entityId = $entityId;
        $this->eventType = $eventType;
        $this->description = $description;
        $this->status = $status;
        $this->errorMessage = $errorMessage;
        $this->createTimestamp = $createTimestamp;
    }

    public function id(): int
    {
        return $this->id;
    }

    public function entityId(): string
    {
        return $this->entityId;
    }

    public function eventType(): string
    {
        return $this->eventType;
    }

    public function description(): string
    {
        return $this->description;
    }

    public function status(): string
    {
        return $this->status;
    }

    public function errorMessage(): string
    {
        return $this->errorMessage;
    }

    public function createTimestamp(): string
    {
        return $this->createTimestamp;
    }

    public static function fromArray(array $data): RetailerExportFileRequest
    {
        if (! isset($data['id']) || ! \is_int($data['id'])) {
            throw new \InvalidArgumentException("Key 'id' is missing in data array or is not an int");
        }

        $id = (int) $data['id'];

        $entityId = isset($data['entityId']) ? (string) $data['entityId'] : '';

        if (! isset($data['eventType']) || ! \is_string($data['eventType'])) {
            throw new \InvalidArgumentException("Key 'eventType' is missing in data array or is not a string");
        }

        $eventType = (string) $data['eventType'];

        if (! isset($data['description']) || ! \is_string($data['description'])) {
            throw new \InvalidArgumentException("Key 'onHoldByRetailer' is missing in data array or is not a string");
        }

        $description = (string) $data['description'];

        if (! isset($data['status']) || ! \is_string($data['status'])) {
            throw new \InvalidArgumentException("Key 'status' is missing in data array or is not a string");
        }

        $status = (string) $data['status'];

        $errorMessage = isset($data['errorMessage']) ? (string) $data['errorMessage'] : '';

        if (! isset($data['createTimestamp']) || ! \is_string($data['createTimestamp'])) {
            throw new \InvalidArgumentException("Key 'createTimestamp' is missing in data array or is not a string");
        }

        $createTimestamp = (string) $data['createTimestamp'];

        return new self(
            $id,
            $entityId,
            $eventType,
            $description,
            $status,
            $errorMessage,
            $createTimestamp
        );
    }

    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'entityId' => $this->entityId,
            'eventType' => $this->eventType,
            'description' => $this->description,
            'status' => $this->status,
            'errorMessage' => $this->errorMessage,
            'createTimestamp' => $this->createTimestamp,
        ];
    }
}
